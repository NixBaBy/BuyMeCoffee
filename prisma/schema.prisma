// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model user {
  id        Int   @id @default(autoincrement())
  email     String   @unique 
  password  String
  username String?
  sentdonations Donation[] @relation("Donor")
  receivedDonations Donation[] @relation("Resipient")
  profile   Profile?
  bankcard Bankcard?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Profile {
  id             Int   @id @default(autoincrement())
  name           String
  about          String
  avatarImage    String
  socialMediaURL String
  backgroundImage String @default("")
  successMessage String @default("")
  user           user    @relation(fields: [userId], references: [id])  // Холболт
  userId         Int @unique  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
}

model Bankcard {
  id Int @id @default(autoincrement())
  country String
  firstname String
  lastname String
  cardNumber String
  expiryDate DateTime
  cvc String @db.VarChar(3)
  userId Int @unique
  user user @relation(fields: [userId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
}
model Donation {
  id Int @id @default(autoincrement())
  amount Int
  specialMessage String
  socialURLOrBuyMeCoffee String
  donor user? @relation("Donor", fields: [donorId] ,references: [id])
  donorId Int @unique
  recipient user @relation("Resipient" , fields: [recipientId] , references: [id])
  recipientId Int @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
}